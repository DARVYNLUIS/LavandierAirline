// <auto-generated />
using System;
using LavandierAirLine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LavandierAirLine.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414193527_UpdateModels3")]
    partial class UpdateModels3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LavandierAirLine.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Avion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidad = 200,
                            Modelo = "Boeing 737",
                            NumeroSerie = "737 MAX"
                        },
                        new
                        {
                            Id = 2,
                            Capacidad = 180,
                            Modelo = "Airbus A320",
                            NumeroSerie = "A320neo"
                        },
                        new
                        {
                            Id = 3,
                            Capacidad = 250,
                            Modelo = "Boeing 787",
                            NumeroSerie = "787 Dreamliner"
                        },
                        new
                        {
                            Id = 4,
                            Capacidad = 300,
                            Modelo = "Airbus A350",
                            NumeroSerie = "A350 XWB"
                        },
                        new
                        {
                            Id = 5,
                            Capacidad = 350,
                            Modelo = "Boeing 777",
                            NumeroSerie = "777-200LR"
                        });
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Boleto", b =>
                {
                    b.Property<int>("BoletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoletoId"));

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EstadosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<float>("PrecioTotal")
                        .HasColumnType("real");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("BoletoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadosId");

                    b.HasIndex("ViajeId");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.CategoriaVuelo", b =>
                {
                    b.Property<int>("CategoriaVueloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaVueloId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("CategoriaVueloId");

                    b.ToTable("CategoriaVuelo");

                    b.HasData(
                        new
                        {
                            CategoriaVueloId = 1,
                            Descripcion = "Segunda mas top",
                            Nombre = "Primera clase",
                            Precio = 425f
                        },
                        new
                        {
                            CategoriaVueloId = 2,
                            Descripcion = "Cuarta ms top.",
                            Nombre = "Turista",
                            Precio = 225f
                        },
                        new
                        {
                            CategoriaVueloId = 3,
                            Descripcion = "Top",
                            Nombre = "Clase Premium",
                            Precio = 500f
                        },
                        new
                        {
                            CategoriaVueloId = 4,
                            Descripcion = "Tercera mas top.",
                            Nombre = "economica",
                            Precio = 300f
                        });
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.DetalleBoleto", b =>
                {
                    b.Property<int>("DetalleBoletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleBoletoId"));

                    b.Property<int?>("BoletoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioTotal")
                        .HasColumnType("real");

                    b.Property<float>("PrecioUnitario")
                        .HasColumnType("real");

                    b.HasKey("DetalleBoletoId");

                    b.HasIndex("BoletoId");

                    b.ToTable("DetalleBoletos");
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Estados", b =>
                {
                    b.Property<int>("EstadosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadosId"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadosId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            EstadosId = 1,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            EstadosId = 2,
                            Nombre = "Pagado"
                        },
                        new
                        {
                            EstadosId = 3,
                            Nombre = "Vencido"
                        },
                        new
                        {
                            EstadosId = 4,
                            Nombre = "Cancelado"
                        },
                        new
                        {
                            EstadosId = 5,
                            Nombre = "Aprobado"
                        },
                        new
                        {
                            EstadosId = 6,
                            Nombre = "Denegado"
                        });
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.MetodosPagos", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetodoPagoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetodoPagoId");

                    b.ToTable("MetodosPagos");

                    b.HasData(
                        new
                        {
                            MetodoPagoId = 1,
                            Descripcion = "Tarjeta"
                        },
                        new
                        {
                            MetodoPagoId = 2,
                            Descripcion = "Efectivo"
                        },
                        new
                        {
                            MetodoPagoId = 3,
                            Descripcion = "Cheque"
                        });
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<int>("BoletoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int?>("MetodosPagosMetodoPagoId")
                        .HasColumnType("int");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PagoId");

                    b.HasIndex("BoletoId");

                    b.HasIndex("EstadoPagoId");

                    b.HasIndex("MetodosPagosMetodoPagoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Viaje", b =>
                {
                    b.Property<int>("ViajesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViajesId"));

                    b.Property<int>("AvionId")
                        .HasColumnType("int");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("ViajesId");

                    b.HasIndex("AvionId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "6ac343b0-00ef-4a1c-8f64-68daaca77b5b ",
                            ConcurrencyStamp = "6ac343b0-00ef-4a1c-8f64-68daaca77b5b",
                            Name = "Cliente",
                            NormalizedName = "Cliente"
                        },
                        new
                        {
                            Id = "6ac343b0-00ef-4a1c-8f64-68daaca77b4b",
                            ConcurrencyStamp = "6ac343b0-00ef-4a1c-8f64-68daaca77b4b",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "6ac343b0-00ef-4a1c-8f64-68daaca77b2b",
                            ConcurrencyStamp = "6ac343b0-00ef-4a1c-8f64-68daaca77b2b",
                            Name = "Delivery",
                            NormalizedName = "Delivery"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Boleto", b =>
                {
                    b.HasOne("LavandierAirLine.Data.ApplicationUser", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavandierAirLine.Modelos.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavandierAirLine.Modelos.Viaje", "Viaje")
                        .WithMany()
                        .HasForeignKey("ViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estados");

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.DetalleBoleto", b =>
                {
                    b.HasOne("LavandierAirLine.Modelos.Boleto", null)
                        .WithMany("Detalles")
                        .HasForeignKey("BoletoId");
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Pago", b =>
                {
                    b.HasOne("LavandierAirLine.Modelos.Boleto", "Boleto")
                        .WithMany()
                        .HasForeignKey("BoletoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LavandierAirLine.Modelos.Estados", "EstadoPago")
                        .WithMany()
                        .HasForeignKey("EstadoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavandierAirLine.Modelos.MetodosPagos", "MetodosPagos")
                        .WithMany()
                        .HasForeignKey("MetodosPagosMetodoPagoId");

                    b.HasOne("LavandierAirLine.Data.ApplicationUser", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boleto");

                    b.Navigation("EstadoPago");

                    b.Navigation("MetodosPagos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Viaje", b =>
                {
                    b.HasOne("LavandierAirLine.Modelos.Avion", "Avion")
                        .WithMany()
                        .HasForeignKey("AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avion");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LavandierAirLine.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LavandierAirLine.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LavandierAirLine.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LavandierAirLine.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LavandierAirLine.Modelos.Boleto", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
